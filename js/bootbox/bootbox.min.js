/**
 * bootbox.js v3.2.0
 *
 * http://bootboxjs.com/license.txt
 */

var bootbox = window.bootbox || function(e, t) {
    function n(e, t) {
        return "undefined" == typeof t && (t = r), "string" == typeof c[t][e] ? c[t][e] : t != i ? n(e, i) : e
    }
    var r = "en",
        i = "en",
        s = !0,
        o = "static",
        u = "",
        a = {},
        f = {},
        l = {
            setLocale: function(e) {
                for (var t in c)
                    if (t == e) {
                        r = e;
                        return
                    }
                throw Error("Invalid locale: " + e)
            },
            addLocale: function(e, t) {
                "undefined" == typeof c[e] && (c[e] = {});
                for (var n in t) c[e][n] = t[n]
            },
            setIcons: function(e) {
                f = e;
                if ("object" != typeof f || null === f) f = {}
            },
            setBtnClasses: function(e) {
                a = e;
                if ("object" != typeof a || null === a) a = {}
            },
            alert: function() {
                var e = "",
                    t = n("OK"),
                    r = null;
                switch (arguments.length) {
                    case 1:
                        e = arguments[0];
                        break;
                    case 2:
                        e = arguments[0], "function" == typeof arguments[1] ? r = arguments[1] : t = arguments[1];
                        break;
                    case 3:
                        e = arguments[0], t = arguments[1], r = arguments[2];
                        break;
                    default:
                        throw Error("Incorrect number of arguments: expected 1-3")
                }
                return l.dialog(e, {
                    label: t,
                    icon: f.OK,
                    "class": a.OK,
                    callback: r
                }, {
                    onEscape: r || !0
                })
            },
            confirm: function() {
                var e = "",
                    t = n("CANCEL"),
                    r = n("CONFIRM"),
                    i = null;
                switch (arguments.length) {
                    case 1:
                        e = arguments[0];
                        break;
                    case 2:
                        e = arguments[0], "function" == typeof arguments[1] ? i = arguments[1] : t = arguments[1];
                        break;
                    case 3:
                        e = arguments[0], t = arguments[1], "function" == typeof arguments[2] ? i = arguments[2] : r = arguments[2];
                        break;
                    case 4:
                        e = arguments[0], t = arguments[1], r = arguments[2], i = arguments[3];
                        break;
                    default:
                        throw Error("Incorrect number of arguments: expected 1-4")
                }
                var s = function() {
                    if ("function" == typeof i) return i(!1)
                };
                return l.dialog(e, [{
                    label: t,
                    icon: f.CANCEL,
                    "class": a.CANCEL,
                    callback: s
                }, {
                    label: r,
                    icon: f.CONFIRM,
                    "class": a.CONFIRM,
                    callback: function() {
                        if ("function" == typeof i) return i(!0)
                    }
                }], {
                    onEscape: s
                })
            },
            prompt: function() {
                var e = "",
                    r = n("CANCEL"),
                    i = n("CONFIRM"),
                    s = null,
                    o = "";
                switch (arguments.length) {
                    case 1:
                        e = arguments[0];
                        break;
                    case 2:
                        e = arguments[0], "function" == typeof arguments[1] ? s = arguments[1] : r = arguments[1];
                        break;
                    case 3:
                        e = arguments[0], r = arguments[1], "function" == typeof arguments[2] ? s = arguments[2] : i = arguments[2];
                        break;
                    case 4:
                        e = arguments[0], r = arguments[1], i = arguments[2], s = arguments[3];
                        break;
                    case 5:
                        e = arguments[0], r = arguments[1], i = arguments[2], s = arguments[3], o = arguments[4];
                        break;
                    default:
                        throw Error("Incorrect number of arguments: expected 1-5")
                }
                var u = t("<form></form>");
                u.append("<input autocomplete=off type=text value='" + o + "' />");
                var o = function() {
                        if ("function" == typeof s) return s(null)
                    },
                    c = l.dialog(u, [{
                        label: r,
                        icon: f.CANCEL,
                        "class": a.CANCEL,
                        callback: o
                    }, {
                        label: i,
                        icon: f.CONFIRM,
                        "class": a.CONFIRM,
                        callback: function() {
                            if ("function" == typeof s) return s(u.find("input[type=text]").val())
                        }
                    }], {
                        header: e,
                        show: !1,
                        onEscape: o
                    });
                return c.on("shown", function() {
                    u.find("input[type=text]").focus(), u.on("submit", function(e) {
                        e.preventDefault(), c.find(".btn-primary").click()
                    })
                }), c.modal("show"), c
            },
            dialog: function(n, r, i) {
                function a() {
                    var e = null;
                    "function" == typeof i.onEscape && (e = i.onEscape()), !1 !== e && b.modal("hide")
                }
                var f = "",
                    l = [];
                i || (i = {}), "undefined" == typeof r ? r = [] : "undefined" == typeof r.length && (r = [r]);
                for (var c = r.length; c--;) {
                    var h = null,
                        p = null,
                        d = null,
                        m = "",
                        g = null;
                    if ("undefined" == typeof r[c].label && "undefined" == typeof r[c]["class"] && "undefined" == typeof r[c].callback) {
                        var h = 0,
                            p = null,
                            y;
                        for (y in r[c])
                            if (p = y, 1 < ++h) break;
                        1 == h && "function" == typeof r[c][y] && (r[c].label = p, r[c].callback = r[c][y])
                    }
                    "function" == typeof r[c].callback && (g = r[c].callback), r[c]["class"] ? d = r[c]["class"] : c == r.length - 1 && 2 >= r.length && (d = "btn-primary"), h = r[c].label ? r[c].label : "Option " + (c + 1), r[c].icon && (m = "<i class='" + r[c].icon + "'></i> "), p = r[c].href ? r[c].href : "javascript:;", f = "<a data-handler='" + c + "' class='btn " + d + "' href='" + p + "'>" + m + "" + h + "</a>" + f, l[c] = g
                }
                c = ["<div class='bootbox modal' tabindex='-1' style='overflow:hidden;visibility: visible;'>"];
                if (i.header) {
                    d = "";
                    if ("undefined" == typeof i.headerCloseButton || i.headerCloseButton) d = "<a href='javascript:;' class='close'>&times;</a>";
                    c.push("<div class='modal-header'>" + d + "<h3>" + i.header + "</h3></div>")
                }
                c.push("<div class='modal-body'></div>"), f && c.push("<div class='modal-footer'>" + f + "</div>"), c.push("</div>");
                var b = t(c.join("\n"));
                return ("undefined" == typeof i.animate ? s : i.animate) && b.addClass("fade"), (f = "undefined" == typeof i.classes ? u : i.classes) && b.addClass(f), b.find(".modal-body").html(n), b.on("keyup.dismiss.modal", function(e) {
                    27 === e.which && i.onEscape && a("escape")
                }), b.on("click", "a.close", function(e) {
                    e.preventDefault(), a("close")
                }), b.on("shown", function() {
                    b.find("a.btn-primary:first").focus()
                }), b.on("hidden", function() {
                    b.remove()
                }), b.on("click", ".modal-footer a", function(e) {
                    var n = t(this).data("handler"),
                        i = l[n],
                        s = null;
                    "undefined" != typeof n && "undefined" != typeof r[n].href || (e.preventDefault(), "function" == typeof i && (s = i()), !1 !== s && b.modal("hide"))
                }),t("body").append(b), b.modal({
                    backdrop: "undefined" == typeof i.backdrop ? o : i.backdrop,
                    keyboard: !1,
                    show: !1
                }), b.on("show", function() {
                    console.log(e);
                    t(e).off("focusin.modal")
                }), ("undefined" == typeof i.show || !0 === i.show) && b.modal("show"), b
            },
            modal: function() {
                var e, n, r, i = {
                    onEscape: null,
                    keyboard: !0,
                    backdrop: o
                };
                switch (arguments.length) {
                    case 1:
                        e = arguments[0];
                        break;
                    case 2:
                        e = arguments[0], "object" == typeof arguments[1] ? r = arguments[1] : n = arguments[1];
                        break;
                    case 3:
                        e = arguments[0], n = arguments[1], r = arguments[2];
                        break;
                    default:
                        throw Error("Incorrect number of arguments: expected 1-3")
                }
                return i.header = n, r = "object" == typeof r ? t.extend(i, r) : i, l.dialog(e, [], r)
            },
            hideAll: function() {
                t(".bootbox").modal("hide")
            },
            animate: function(e) {
                s = e
            },
            backdrop: function(e) {
                o = e
            },
            classes: function(e) {
                u = e
            }
        },
        c = {
            en: {
                OK: "OK",
                CANCEL: "Cancel",
                CONFIRM: "OK"
            },
            fr: {
                OK: "OK",
                CANCEL: "Annuler",
                CONFIRM: "D'accord"
            },
            de: {
                OK: "OK",
                CANCEL: "Abbrechen",
                CONFIRM: "Akzeptieren"
            },
            es: {
                OK: "OK",
                CANCEL: "Cancelar",
                CONFIRM: "Aceptar"
            },
            br: {
                OK: "OK",
                CANCEL: "Cancelar",
                CONFIRM: "Sim"
            },
            nl: {
                OK: "OK",
                CANCEL: "Annuleren",
                CONFIRM: "Accepteren"
            },
            ru: {
                OK: "OK",
                CANCEL: "ÐžÑ‚Ð¼ÐµÐ½Ð°",
                CONFIRM: "ÐŸÑ€Ð¸Ð¼ÐµÐ½Ð¸Ñ‚ÑŒ"
            },
            it: {
                OK: "OK",
                CANCEL: "Annulla",
                CONFIRM: "Conferma"
            }
        };
    return l
}(document, window.jQuery);
window.bootbox = bootbox;